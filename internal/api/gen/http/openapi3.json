{
  "components": {
    "schemas": {
      "BatchHintsResult": {
        "example": {
          "completed_dirs": [
            "abc123"
          ]
        },
        "properties": {
          "completed_dirs": {
            "description": "A list of known values of completedDir used by existing watchers.",
            "example": [
              "abc123"
            ],
            "items": {
              "example": "abc123",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BatchResult": {
        "example": {
          "run_id": "abc123",
          "workflow_id": "abc123"
        },
        "properties": {
          "run_id": {
            "example": "abc123",
            "type": "string"
          },
          "workflow_id": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "workflow_id",
          "run_id"
        ],
        "type": "object"
      },
      "BatchStatusResult": {
        "example": {
          "run_id": "abc123",
          "running": false,
          "status": "abc123",
          "workflow_id": "abc123"
        },
        "properties": {
          "run_id": {
            "example": "abc123",
            "type": "string"
          },
          "running": {
            "example": false,
            "type": "boolean"
          },
          "status": {
            "example": "abc123",
            "type": "string"
          },
          "workflow_id": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "running"
        ],
        "type": "object"
      },
      "BulkRequestBody": {
        "example": {
          "operation": "cancel",
          "size": 1,
          "status": "in progress"
        },
        "properties": {
          "operation": {
            "enum": [
              "retry",
              "cancel",
              "abandon"
            ],
            "example": "cancel",
            "type": "string"
          },
          "size": {
            "default": 100,
            "example": 1,
            "type": "integer"
          },
          "status": {
            "enum": [
              "new",
              "in progress",
              "done",
              "error",
              "unknown",
              "queued",
              "pending",
              "abandoned"
            ],
            "example": "in progress",
            "type": "string"
          }
        },
        "required": [
          "operation",
          "status"
        ],
        "type": "object"
      },
      "BulkStatusResult": {
        "example": {
          "closed_at": "1970-01-01T00:00:01Z",
          "run_id": "abc123",
          "running": false,
          "started_at": "1970-01-01T00:00:01Z",
          "status": "abc123",
          "workflow_id": "abc123"
        },
        "properties": {
          "closed_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "run_id": {
            "example": "abc123",
            "type": "string"
          },
          "running": {
            "example": false,
            "type": "boolean"
          },
          "started_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "example": "abc123",
            "type": "string"
          },
          "workflow_id": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "running"
        ],
        "type": "object"
      },
      "CollectionNotfound": {
        "description": "Collection not found",
        "example": {
          "id": 1,
          "message": "abc123"
        },
        "properties": {
          "id": {
            "description": "Identifier of missing collection",
            "example": 1,
            "type": "integer"
          },
          "message": {
            "description": "Message of error",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "message",
          "id"
        ],
        "type": "object"
      },
      "EnduroCollectionWorkflowHistory": {
        "description": "WorkflowHistoryEvent describes a history event in Temporal.",
        "example": {
          "details": "abc123",
          "id": 1,
          "type": "abc123"
        },
        "properties": {
          "details": {
            "description": "Contents of the event",
            "example": "abc123",
            "format": "binary",
            "type": "string"
          },
          "id": {
            "description": "Identifier of collection",
            "example": 1,
            "type": "integer"
          },
          "type": {
            "description": "Type of the event",
            "example": "abc123",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnduroCollectionWorkflowHistoryCollection": {
        "example": [
          {
            "details": "abc123",
            "id": 1,
            "type": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroCollectionWorkflowHistory"
        },
        "type": "array"
      },
      "EnduroCollectionWorkflowStatus": {
        "example": {
          "history": [
            {
              "details": "abc123",
              "id": 1,
              "type": "abc123"
            }
          ],
          "status": "abc123"
        },
        "properties": {
          "history": {
            "$ref": "#/components/schemas/EnduroCollectionWorkflowHistoryCollection"
          },
          "status": {
            "example": "abc123",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnduroMonitorUpdate": {
        "example": {
          "id": 1,
          "item": {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "original_id": "abc123",
            "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          },
          "type": "abc123"
        },
        "properties": {
          "id": {
            "description": "Identifier of collection",
            "example": 1,
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroStoredCollection"
          },
          "type": {
            "description": "Type of the event",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "EnduroStoredCollection": {
        "description": "StoredCollection describes a collection retrieved by the service.",
        "example": {
          "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "completed_at": "1970-01-01T00:00:01Z",
          "created_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "name": "abc123",
          "original_id": "abc123",
          "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "aip_id": {
            "description": "Identifier of Archivematica AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "completed_at": {
            "description": "Completion datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Identifier of collection",
            "example": 1,
            "type": "integer"
          },
          "name": {
            "description": "Name of the collection",
            "example": "abc123",
            "type": "string"
          },
          "original_id": {
            "description": "Identifier provided by the client",
            "example": "abc123",
            "type": "string"
          },
          "pipeline_id": {
            "description": "Identifier of Archivematica pipeline",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "run_id": {
            "description": "Identifier of latest processing workflow run",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "started_at": {
            "description": "Start datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "default": "new",
            "description": "Status of the collection",
            "enum": [
              "new",
              "in progress",
              "done",
              "error",
              "unknown",
              "queued",
              "pending",
              "abandoned"
            ],
            "example": "in progress",
            "type": "string"
          },
          "transfer_id": {
            "description": "Identifier of Archivematica tranfser",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "workflow_id": {
            "description": "Identifier of processing workflow",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "id",
          "status",
          "created_at"
        ],
        "type": "object"
      },
      "EnduroStoredCollectionCollection": {
        "example": [
          {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "original_id": "abc123",
            "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroStoredCollection"
        },
        "type": "array"
      },
      "EnduroStoredPipeline": {
        "description": "StoredPipeline describes a pipeline retrieved by this service.",
        "example": {
          "capacity": 1,
          "current": 1,
          "id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "status": "abc123"
        },
        "properties": {
          "capacity": {
            "description": "Maximum concurrent transfers",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "current": {
            "description": "Current transfers",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "Identifier of pipeline",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "description": "Name of the pipeline",
            "example": "abc123",
            "type": "string"
          },
          "status": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Error": {
        "example": {
          "fault": false,
          "id": "123abc",
          "message": "parameter 'p' must be an integer",
          "name": "bad_request",
          "temporary": false,
          "timeout": false
        },
        "properties": {
          "fault": {
            "description": "Is the error a server-side fault?",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "ID is a unique identifier for this particular occurrence of the problem.",
            "example": "123abc",
            "type": "string"
          },
          "message": {
            "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
            "example": "parameter 'p' must be an integer",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of this class of errors.",
            "example": "bad_request",
            "type": "string"
          },
          "temporary": {
            "description": "Is the error temporary?",
            "example": false,
            "type": "boolean"
          },
          "timeout": {
            "description": "Is the error a timeout?",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "id",
          "message",
          "temporary",
          "timeout",
          "fault"
        ],
        "type": "object"
      },
      "ListResponseBody": {
        "example": {
          "items": [
            {
              "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "completed_at": "1970-01-01T00:00:01Z",
              "created_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "name": "abc123",
              "original_id": "abc123",
              "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
            }
          ],
          "next_cursor": "abc123"
        },
        "properties": {
          "items": {
            "$ref": "#/components/schemas/EnduroStoredCollectionCollection"
          },
          "next_cursor": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "PipelineNotFound": {
        "description": "Pipeline not found",
        "example": {
          "id": "abc123",
          "message": "abc123"
        },
        "properties": {
          "id": {
            "description": "Identifier of missing pipeline",
            "example": "abc123",
            "type": "string"
          },
          "message": {
            "description": "Message of error",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "message",
          "id"
        ],
        "type": "object"
      },
      "SubmitRequestBody": {
        "example": {
          "completed_dir": "abc123",
          "depth": 1,
          "exclude_hidden_files": false,
          "path": "abc123",
          "pipeline": "abc123",
          "process_name_metadata": false,
          "processing_config": "abc123",
          "reject_duplicates": false,
          "retention_period": "abc123",
          "transfer_type": "abc123"
        },
        "properties": {
          "completed_dir": {
            "example": "abc123",
            "type": "string"
          },
          "depth": {
            "default": 0,
            "example": 1,
            "minimum": 0,
            "type": "integer"
          },
          "exclude_hidden_files": {
            "default": false,
            "example": false,
            "type": "boolean"
          },
          "path": {
            "example": "abc123",
            "type": "string"
          },
          "pipeline": {
            "example": "abc123",
            "type": "string"
          },
          "process_name_metadata": {
            "default": false,
            "example": false,
            "type": "boolean"
          },
          "processing_config": {
            "example": "abc123",
            "type": "string"
          },
          "reject_duplicates": {
            "default": false,
            "example": false,
            "type": "boolean"
          },
          "retention_period": {
            "example": "abc123",
            "type": "string"
          },
          "transfer_type": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Enduro API",
    "version": "1.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/batch": {
      "get": {
        "description": "Retrieve status of current batch operation.",
        "operationId": "batch#status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "run_id": "abc123",
                  "running": false,
                  "status": "abc123",
                  "workflow_id": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/BatchStatusResult"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "status batch",
        "tags": [
          "batch"
        ]
      },
      "post": {
        "description": "Submit a new batch",
        "operationId": "batch#submit",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "completed_dir": "abc123",
                "depth": 1,
                "exclude_hidden_files": false,
                "path": "abc123",
                "pipeline": "abc123",
                "process_name_metadata": false,
                "processing_config": "abc123",
                "reject_duplicates": false,
                "retention_period": "abc123",
                "transfer_type": "abc123"
              },
              "schema": {
                "$ref": "#/components/schemas/SubmitRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "example": {
                  "run_id": "abc123",
                  "workflow_id": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/BatchResult"
                }
              }
            },
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "summary": "submit batch",
        "tags": [
          "batch"
        ]
      }
    },
    "/batch/hints": {
      "get": {
        "description": "Retrieve form hints",
        "operationId": "batch#hints",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "completed_dirs": [
                    "abc123"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/BatchHintsResult"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "hints batch",
        "tags": [
          "batch"
        ]
      }
    },
    "/collection": {
      "get": {
        "description": "List all stored collections",
        "operationId": "collection#list",
        "parameters": [
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "query",
            "name": "name",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "query",
            "name": "original_id",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Identifier of Archivematica tranfser",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "query",
            "name": "transfer_id",
            "schema": {
              "description": "Identifier of Archivematica tranfser",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Identifier of Archivematica AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "query",
            "name": "aip_id",
            "schema": {
              "description": "Identifier of Archivematica AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Identifier of Archivematica pipeline",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "query",
            "name": "pipeline_id",
            "schema": {
              "description": "Identifier of Archivematica pipeline",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "e1d563b0-1474-4155-beed-f2d3a12e1529",
            "in": "query",
            "name": "earliest_created_time",
            "schema": {
              "example": "e1d563b0-1474-4155-beed-f2d3a12e1529",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "e1d563b0-1474-4155-beed-f2d3a12e1529",
            "in": "query",
            "name": "latest_created_time",
            "schema": {
              "example": "e1d563b0-1474-4155-beed-f2d3a12e1529",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "in progress",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "new",
                "in progress",
                "done",
                "error",
                "unknown",
                "queued",
                "pending",
                "abandoned"
              ],
              "example": "in progress",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Pagination cursor",
            "example": "abc123",
            "in": "query",
            "name": "cursor",
            "schema": {
              "description": "Pagination cursor",
              "example": "abc123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "completed_at": "1970-01-01T00:00:01Z",
                      "created_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "name": "abc123",
                      "original_id": "abc123",
                      "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                    }
                  ],
                  "next_cursor": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "list collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/bulk": {
      "get": {
        "description": "Retrieve status of current bulk operation.",
        "operationId": "collection#bulk_status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "closed_at": "1970-01-01T00:00:01Z",
                  "run_id": "abc123",
                  "running": false,
                  "started_at": "1970-01-01T00:00:01Z",
                  "status": "abc123",
                  "workflow_id": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/BulkStatusResult"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "bulk_status collection",
        "tags": [
          "collection"
        ]
      },
      "post": {
        "description": "Bulk operations (retry, cancel...).",
        "operationId": "collection#bulk",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "operation": "cancel",
                "size": 1,
                "status": "in progress"
              },
              "schema": {
                "$ref": "#/components/schemas/BulkRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "example": {
                  "run_id": "abc123",
                  "workflow_id": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/BatchResult"
                }
              }
            },
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "summary": "bulk collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/monitor": {
      "get": {
        "operationId": "collection#monitor",
        "responses": {
          "101": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "item": {
                    "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                    "completed_at": "1970-01-01T00:00:01Z",
                    "created_at": "1970-01-01T00:00:01Z",
                    "id": 1,
                    "name": "abc123",
                    "original_id": "abc123",
                    "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                    "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                    "started_at": "1970-01-01T00:00:01Z",
                    "status": "in progress",
                    "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                    "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                  },
                  "type": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroMonitorUpdate"
                }
              }
            },
            "description": "Switching Protocols response."
          }
        },
        "summary": "monitor collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}": {
      "delete": {
        "description": "Delete collection by ID",
        "operationId": "collection#delete",
        "parameters": [
          {
            "description": "Identifier of collection to delete",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of collection to delete",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/CollectionNotfound"
                }
              }
            },
            "description": "not_found: Collection not found"
          }
        },
        "summary": "delete collection",
        "tags": [
          "collection"
        ]
      },
      "get": {
        "description": "Show collection by ID",
        "operationId": "collection#show",
        "parameters": [
          {
            "description": "Identifier of collection to show",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of collection to show",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "completed_at": "1970-01-01T00:00:01Z",
                  "created_at": "1970-01-01T00:00:01Z",
                  "id": 1,
                  "name": "abc123",
                  "original_id": "abc123",
                  "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "started_at": "1970-01-01T00:00:01Z",
                  "status": "in progress",
                  "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroStoredCollection"
                }
              }
            },
            "description": "OK response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/CollectionNotfound"
                }
              }
            },
            "description": "not_found: Collection not found"
          }
        },
        "summary": "show collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/cancel": {
      "post": {
        "description": "Cancel collection processing by ID",
        "operationId": "collection#cancel",
        "parameters": [
          {
            "description": "Identifier of collection to remove",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of collection to remove",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_running: Bad Request response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/CollectionNotfound"
                }
              }
            },
            "description": "not_found: Collection not found"
          }
        },
        "summary": "cancel collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/decision": {
      "post": {
        "description": "Make decision for a pending collection by ID",
        "operationId": "collection#decide",
        "parameters": [
          {
            "description": "Identifier of collection to look up",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of collection to look up",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "option": "abc123"
              },
              "schema": {
                "example": {
                  "option": "abc123"
                },
                "properties": {
                  "option": {
                    "description": "Decision option to proceed with",
                    "example": "abc123",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/CollectionNotfound"
                }
              }
            },
            "description": "not_found: Collection not found"
          }
        },
        "summary": "decide collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/download": {
      "get": {
        "description": "Download collection by ID",
        "operationId": "collection#download",
        "parameters": [
          {
            "description": "Identifier of collection to look up",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of collection to look up",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK response.",
            "headers": {
              "Content-Disposition": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              },
              "Content-Length": {
                "example": 1,
                "schema": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                }
              },
              "Content-Type": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/CollectionNotfound"
                }
              }
            },
            "description": "not_found: Collection not found"
          }
        },
        "summary": "download collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/retry": {
      "post": {
        "description": "Retry collection processing by ID",
        "operationId": "collection#retry",
        "parameters": [
          {
            "description": "Identifier of collection to retry",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of collection to retry",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_running: Bad Request response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/CollectionNotfound"
                }
              }
            },
            "description": "not_found: Collection not found"
          }
        },
        "summary": "retry collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/workflow": {
      "get": {
        "description": "Retrieve workflow status by ID",
        "operationId": "collection#workflow",
        "parameters": [
          {
            "description": "Identifier of collection to look up",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of collection to look up",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "history": [
                    {
                      "details": "abc123",
                      "id": 1,
                      "type": "abc123"
                    }
                  ],
                  "status": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroCollectionWorkflowStatus"
                }
              }
            },
            "description": "OK response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/CollectionNotfound"
                }
              }
            },
            "description": "not_found: Collection not found"
          }
        },
        "summary": "workflow collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/pipeline": {
      "get": {
        "description": "List all known pipelines",
        "operationId": "pipeline#list",
        "parameters": [
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "query",
            "name": "name",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": false,
            "in": "query",
            "name": "status",
            "schema": {
              "default": false,
              "example": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "capacity": 1,
                    "current": 1,
                    "id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                    "name": "abc123",
                    "status": "abc123"
                  }
                ],
                "schema": {
                  "example": [
                    {
                      "capacity": 1,
                      "current": 1,
                      "id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "name": "abc123",
                      "status": "abc123"
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/EnduroStoredPipeline"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK response."
          }
        },
        "summary": "list pipeline",
        "tags": [
          "pipeline"
        ]
      }
    },
    "/pipeline/{id}": {
      "get": {
        "description": "Show pipeline by ID",
        "operationId": "pipeline#show",
        "parameters": [
          {
            "description": "Identifier of pipeline to show",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of pipeline to show",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "capacity": 1,
                  "current": 1,
                  "id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "name": "abc123",
                  "status": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroStoredPipeline"
                }
              }
            },
            "description": "OK response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": "abc123",
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PipelineNotFound"
                }
              }
            },
            "description": "not_found: Pipeline not found"
          }
        },
        "summary": "show pipeline",
        "tags": [
          "pipeline"
        ]
      }
    },
    "/pipeline/{id}/processing": {
      "get": {
        "description": "List all processing configurations of a pipeline given its ID",
        "operationId": "pipeline#processing",
        "parameters": [
          {
            "description": "Identifier of pipeline",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of pipeline",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "abc123"
                ],
                "schema": {
                  "example": [
                    "abc123"
                  ],
                  "items": {
                    "example": "abc123",
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": "abc123",
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PipelineNotFound"
                }
              }
            },
            "description": "not_found: Pipeline not found"
          }
        },
        "summary": "processing pipeline",
        "tags": [
          "pipeline"
        ]
      }
    },
    "/swagger/swagger.json": {
      "get": {
        "description": "JSON document containing the API swagger definition.",
        "operationId": "swagger#/swagger/swagger.json",
        "responses": {
          "200": {
            "description": "File downloaded"
          }
        },
        "summary": "Download internal/api/gen/http/openapi.json",
        "tags": [
          "swagger"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:9000"
    }
  ],
  "tags": [
    {
      "description": "The batch service manages batches of collections.",
      "name": "batch"
    },
    {
      "description": "The collection service manages packages being transferred to Archivematica.",
      "name": "collection"
    },
    {
      "description": "The pipeline service manages Archivematica pipelines.",
      "name": "pipeline"
    },
    {
      "description": "The swagger service serves the API swagger definition.",
      "name": "swagger"
    }
  ]
}
