{
  "consumes": [
    "application/json",
    "application/xml",
    "application/gob"
  ],
  "definitions": {
    "BatchHintsResponseBody": {
      "example": {
        "completed_dirs": [
          "abc123"
        ]
      },
      "properties": {
        "completed_dirs": {
          "description": "A list of known values of completedDir used by existing watchers.",
          "example": [
            "abc123"
          ],
          "items": {
            "example": "abc123",
            "type": "string"
          },
          "type": "array"
        }
      },
      "title": "BatchHintsResponseBody",
      "type": "object"
    },
    "BatchStatusResponseBody": {
      "example": {
        "run_id": "abc123",
        "running": false,
        "status": "abc123",
        "workflow_id": "abc123"
      },
      "properties": {
        "run_id": {
          "example": "abc123",
          "type": "string"
        },
        "running": {
          "example": false,
          "type": "boolean"
        },
        "status": {
          "example": "abc123",
          "type": "string"
        },
        "workflow_id": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "running"
      ],
      "title": "BatchStatusResponseBody",
      "type": "object"
    },
    "BatchSubmitNotAvailableResponseBody": {
      "description": "submit_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "BatchSubmitNotValidResponseBody": {
      "description": "submit_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "BatchSubmitRequestBody": {
      "example": {
        "completed_dir": "abc123",
        "path": "abc123",
        "pipeline": "abc123",
        "process_name_metadata": false,
        "processing_config": "abc123",
        "reject_duplicates": false,
        "retention_period": "abc123",
        "transfer_type": "abc123"
      },
      "properties": {
        "completed_dir": {
          "example": "abc123",
          "type": "string"
        },
        "path": {
          "example": "abc123",
          "type": "string"
        },
        "pipeline": {
          "example": "abc123",
          "type": "string"
        },
        "process_name_metadata": {
          "default": false,
          "example": false,
          "type": "boolean"
        },
        "processing_config": {
          "example": "abc123",
          "type": "string"
        },
        "reject_duplicates": {
          "default": false,
          "example": false,
          "type": "boolean"
        },
        "retention_period": {
          "example": "abc123",
          "type": "string"
        },
        "transfer_type": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "title": "BatchSubmitRequestBody",
      "type": "object"
    },
    "BatchSubmitResponseBody": {
      "example": {
        "run_id": "abc123",
        "workflow_id": "abc123"
      },
      "properties": {
        "run_id": {
          "example": "abc123",
          "type": "string"
        },
        "workflow_id": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "workflow_id",
        "run_id"
      ],
      "title": "BatchSubmitResponseBody",
      "type": "object"
    },
    "CollectionBulkNotAvailableResponseBody": {
      "description": "bulk_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "CollectionBulkNotValidResponseBody": {
      "description": "bulk_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "CollectionBulkRequestBody": {
      "example": {
        "operation": "cancel",
        "size": 1,
        "status": "in progress"
      },
      "properties": {
        "operation": {
          "enum": [
            "retry",
            "cancel",
            "abandon"
          ],
          "example": "cancel",
          "type": "string"
        },
        "size": {
          "default": 100,
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "enum": [
            "new",
            "in progress",
            "done",
            "error",
            "unknown",
            "queued",
            "pending",
            "abandoned"
          ],
          "example": "in progress",
          "type": "string"
        }
      },
      "required": [
        "operation",
        "status"
      ],
      "title": "CollectionBulkRequestBody",
      "type": "object"
    },
    "CollectionBulkResponseBody": {
      "example": {
        "run_id": "abc123",
        "workflow_id": "abc123"
      },
      "properties": {
        "run_id": {
          "example": "abc123",
          "type": "string"
        },
        "workflow_id": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "workflow_id",
        "run_id"
      ],
      "title": "CollectionBulkResponseBody",
      "type": "object"
    },
    "CollectionBulkStatusResponseBody": {
      "example": {
        "closed_at": "1970-01-01T00:00:01Z",
        "run_id": "abc123",
        "running": false,
        "started_at": "1970-01-01T00:00:01Z",
        "status": "abc123",
        "workflow_id": "abc123"
      },
      "properties": {
        "closed_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "run_id": {
          "example": "abc123",
          "type": "string"
        },
        "running": {
          "example": false,
          "type": "boolean"
        },
        "started_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "example": "abc123",
          "type": "string"
        },
        "workflow_id": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "running"
      ],
      "title": "CollectionBulkStatusResponseBody",
      "type": "object"
    },
    "CollectionCancelNotFoundResponseBody": {
      "description": "Collection not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "CollectionCancelNotFoundResponseBody",
      "type": "object"
    },
    "CollectionCancelNotRunningResponseBody": {
      "description": "cancel_not_running_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "CollectionDecideNotFoundResponseBody": {
      "description": "Collection not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "CollectionDecideNotFoundResponseBody",
      "type": "object"
    },
    "CollectionDecideNotValidResponseBody": {
      "description": "decide_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "CollectionDeleteNotFoundResponseBody": {
      "description": "Collection not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "CollectionDeleteNotFoundResponseBody",
      "type": "object"
    },
    "CollectionDownloadNotFoundResponseBody": {
      "description": "Collection not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "CollectionDownloadNotFoundResponseBody",
      "type": "object"
    },
    "CollectionListResponseBody": {
      "example": {
        "items": [
          {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "original_id": "abc123",
            "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          }
        ],
        "next_cursor": "abc123"
      },
      "properties": {
        "items": {
          "$ref": "#/definitions/EnduroStoredCollectionResponseBodyCollection"
        },
        "next_cursor": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "items"
      ],
      "title": "CollectionListResponseBody",
      "type": "object"
    },
    "CollectionMonitorResponseBody": {
      "description": "MonitorResponseBody result type (default view)",
      "example": {
        "id": 1,
        "item": {
          "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "completed_at": "1970-01-01T00:00:01Z",
          "created_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "name": "abc123",
          "original_id": "abc123",
          "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "type": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "item": {
          "$ref": "#/definitions/EnduroStoredCollectionResponseBody"
        },
        "type": {
          "description": "Type of the event",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.monitor-update; view=default",
      "type": "object"
    },
    "CollectionRetryNotFoundResponseBody": {
      "description": "Collection not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "CollectionRetryNotFoundResponseBody",
      "type": "object"
    },
    "CollectionRetryNotRunningResponseBody": {
      "description": "retry_not_running_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "CollectionShowNotFoundResponseBody": {
      "description": "Collection not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "CollectionShowNotFoundResponseBody",
      "type": "object"
    },
    "CollectionShowResponseBody": {
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "completed_at": "1970-01-01T00:00:01Z",
        "created_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "name": "abc123",
        "original_id": "abc123",
        "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of Archivematica AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "completed_at": {
          "description": "Completion datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "Identifier of collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "Name of the collection",
          "example": "abc123",
          "type": "string"
        },
        "original_id": {
          "description": "Identifier provided by the client",
          "example": "abc123",
          "type": "string"
        },
        "pipeline_id": {
          "description": "Identifier of Archivematica pipeline",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "run_id": {
          "description": "Identifier of latest processing workflow run",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "started_at": {
          "description": "Start datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "default": "new",
          "description": "Status of the collection",
          "enum": [
            "new",
            "in progress",
            "done",
            "error",
            "unknown",
            "queued",
            "pending",
            "abandoned"
          ],
          "example": "in progress",
          "type": "string"
        },
        "transfer_id": {
          "description": "Identifier of Archivematica tranfser",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "workflow_id": {
          "description": "Identifier of processing workflow",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "status",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.stored-collection; view=default",
      "type": "object"
    },
    "CollectionWorkflowNotFoundResponseBody": {
      "description": "Collection not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "CollectionWorkflowNotFoundResponseBody",
      "type": "object"
    },
    "CollectionWorkflowResponseBody": {
      "description": "WorkflowResponseBody result type (default view)",
      "example": {
        "history": [
          {
            "details": "abc123",
            "id": 1,
            "type": "abc123"
          }
        ],
        "status": "abc123"
      },
      "properties": {
        "history": {
          "$ref": "#/definitions/EnduroCollectionWorkflowHistoryResponseBodyCollection"
        },
        "status": {
          "example": "abc123",
          "type": "string"
        }
      },
      "title": "Mediatype identifier: application/vnd.enduro.collection-workflow-status; view=default",
      "type": "object"
    },
    "EnduroCollectionWorkflowHistoryResponseBody": {
      "description": "WorkflowHistoryEvent describes a history event in Temporal. (default view)",
      "example": {
        "details": "abc123",
        "id": 1,
        "type": "abc123"
      },
      "properties": {
        "details": {
          "description": "Contents of the event",
          "example": "abc123",
          "format": "binary",
          "type": "string"
        },
        "id": {
          "description": "Identifier of collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "type": {
          "description": "Type of the event",
          "example": "abc123",
          "type": "string"
        }
      },
      "title": "Mediatype identifier: application/vnd.enduro.collection-workflow-history; view=default",
      "type": "object"
    },
    "EnduroCollectionWorkflowHistoryResponseBodyCollection": {
      "description": "EnduroCollection-Workflow-HistoryCollectionResponseBody is the result type for an array of EnduroCollection-Workflow-HistoryResponseBody (default view)",
      "example": [
        {
          "details": "abc123",
          "id": 1,
          "type": "abc123"
        }
      ],
      "items": {
        "$ref": "#/definitions/EnduroCollectionWorkflowHistoryResponseBody"
      },
      "title": "Mediatype identifier: application/vnd.enduro.collection-workflow-history; type=collection; view=default",
      "type": "array"
    },
    "EnduroStoredCollectionResponseBody": {
      "description": "StoredCollection describes a collection retrieved by the service. (default view)",
      "example": {
        "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "completed_at": "1970-01-01T00:00:01Z",
        "created_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "name": "abc123",
        "original_id": "abc123",
        "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of Archivematica AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "completed_at": {
          "description": "Completion datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "Identifier of collection",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "Name of the collection",
          "example": "abc123",
          "type": "string"
        },
        "original_id": {
          "description": "Identifier provided by the client",
          "example": "abc123",
          "type": "string"
        },
        "pipeline_id": {
          "description": "Identifier of Archivematica pipeline",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "run_id": {
          "description": "Identifier of latest processing workflow run",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "started_at": {
          "description": "Start datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "default": "new",
          "description": "Status of the collection",
          "enum": [
            "new",
            "in progress",
            "done",
            "error",
            "unknown",
            "queued",
            "pending",
            "abandoned"
          ],
          "example": "in progress",
          "type": "string"
        },
        "transfer_id": {
          "description": "Identifier of Archivematica tranfser",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "workflow_id": {
          "description": "Identifier of processing workflow",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "status",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.stored-collection; view=default",
      "type": "object"
    },
    "EnduroStoredCollectionResponseBodyCollection": {
      "description": "EnduroStored-CollectionCollectionResponseBody is the result type for an array of EnduroStored-CollectionResponseBody (default view)",
      "example": [
        {
          "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "completed_at": "1970-01-01T00:00:01Z",
          "created_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "name": "abc123",
          "original_id": "abc123",
          "pipeline_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "transfer_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        }
      ],
      "items": {
        "$ref": "#/definitions/EnduroStoredCollectionResponseBody"
      },
      "title": "Mediatype identifier: application/vnd.enduro.stored-collection; type=collection; view=default",
      "type": "array"
    },
    "EnduroStoredPipelineResponse": {
      "description": "StoredPipeline describes a pipeline retrieved by this service. (default view)",
      "example": {
        "capacity": 1,
        "current": 1,
        "id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "status": "abc123"
      },
      "properties": {
        "capacity": {
          "description": "Maximum concurrent transfers",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "current": {
          "description": "Current transfers",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "Identifier of pipeline",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "description": "Name of the pipeline",
          "example": "abc123",
          "type": "string"
        },
        "status": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.stored-pipeline; view=default",
      "type": "object"
    },
    "PipelineProcessingNotFoundResponseBody": {
      "description": "Pipeline not found",
      "example": {
        "id": "abc123",
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing pipeline",
          "example": "abc123",
          "type": "string"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "PipelineProcessingNotFoundResponseBody",
      "type": "object"
    },
    "PipelineShowNotFoundResponseBody": {
      "description": "Pipeline not found",
      "example": {
        "id": "abc123",
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing pipeline",
          "example": "abc123",
          "type": "string"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "PipelineShowNotFoundResponseBody",
      "type": "object"
    },
    "PipelineShowResponseBody": {
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "capacity": 1,
        "current": 1,
        "id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "status": "abc123"
      },
      "properties": {
        "capacity": {
          "description": "Maximum concurrent transfers",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "current": {
          "description": "Current transfers",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "Identifier of pipeline",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "description": "Name of the pipeline",
          "example": "abc123",
          "type": "string"
        },
        "status": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.stored-pipeline; view=default",
      "type": "object"
    }
  },
  "host": "localhost:9000",
  "info": {
    "title": "Enduro API",
    "version": ""
  },
  "paths": {
    "/batch": {
      "get": {
        "description": "Retrieve status of current batch operation.",
        "operationId": "batch#status",
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/BatchStatusResponseBody",
              "required": [
                "running"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "status batch",
        "tags": [
          "batch"
        ]
      },
      "post": {
        "description": "Submit a new batch",
        "operationId": "batch#submit",
        "parameters": [
          {
            "in": "body",
            "name": "SubmitRequestBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchSubmitRequestBody",
              "required": [
                "path"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response.",
            "schema": {
              "$ref": "#/definitions/BatchSubmitResponseBody",
              "required": [
                "workflow_id",
                "run_id"
              ]
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/BatchSubmitNotValidResponseBody"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/BatchSubmitNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "submit batch",
        "tags": [
          "batch"
        ]
      }
    },
    "/batch/hints": {
      "get": {
        "description": "Retrieve form hints",
        "operationId": "batch#hints",
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/BatchHintsResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "hints batch",
        "tags": [
          "batch"
        ]
      }
    },
    "/collection": {
      "get": {
        "description": "List all stored collections",
        "operationId": "collection#list",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "original_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Identifier of Archivematica tranfser",
            "format": "uuid",
            "in": "query",
            "name": "transfer_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Identifier of Archivematica AIP",
            "format": "uuid",
            "in": "query",
            "name": "aip_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Identifier of Archivematica pipeline",
            "format": "uuid",
            "in": "query",
            "name": "pipeline_id",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "earliest_created_time",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "latest_created_time",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "new",
              "in progress",
              "done",
              "error",
              "unknown",
              "queued",
              "pending",
              "abandoned"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination cursor",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/CollectionListResponseBody",
              "required": [
                "items"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "list collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/bulk": {
      "get": {
        "description": "Retrieve status of current bulk operation.",
        "operationId": "collection#bulk_status",
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/CollectionBulkStatusResponseBody",
              "required": [
                "running"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "bulk_status collection",
        "tags": [
          "collection"
        ]
      },
      "post": {
        "description": "Bulk operations (retry, cancel...).",
        "operationId": "collection#bulk",
        "parameters": [
          {
            "in": "body",
            "name": "BulkRequestBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollectionBulkRequestBody",
              "required": [
                "operation",
                "status"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response.",
            "schema": {
              "$ref": "#/definitions/CollectionBulkResponseBody",
              "required": [
                "workflow_id",
                "run_id"
              ]
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/CollectionBulkNotValidResponseBody"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/CollectionBulkNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "bulk collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/monitor": {
      "get": {
        "operationId": "collection#monitor",
        "responses": {
          "101": {
            "description": "Switching Protocols response.",
            "schema": {
              "$ref": "#/definitions/CollectionMonitorResponseBody"
            }
          }
        },
        "schemes": [
          "ws"
        ],
        "summary": "monitor collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}": {
      "delete": {
        "description": "Delete collection by ID",
        "operationId": "collection#delete",
        "parameters": [
          {
            "description": "Identifier of collection to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/CollectionDeleteNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "delete collection",
        "tags": [
          "collection"
        ]
      },
      "get": {
        "description": "Show collection by ID",
        "operationId": "collection#show",
        "parameters": [
          {
            "description": "Identifier of collection to show",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/CollectionShowResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/CollectionShowNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "show collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/cancel": {
      "post": {
        "description": "Cancel collection processing by ID",
        "operationId": "collection#cancel",
        "parameters": [
          {
            "description": "Identifier of collection to remove",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/CollectionCancelNotRunningResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/CollectionCancelNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "cancel collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/decision": {
      "post": {
        "description": "Make decision for a pending collection by ID",
        "operationId": "collection#decide",
        "parameters": [
          {
            "description": "Identifier of collection to look up",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "object",
            "required": true,
            "schema": {
              "properties": {
                "option": {
                  "description": "Decision option to proceed with",
                  "example": "abc123",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/CollectionDecideNotValidResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/CollectionDecideNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "decide collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/download": {
      "get": {
        "description": "Download collection by ID",
        "operationId": "collection#download",
        "parameters": [
          {
            "description": "Identifier of collection to look up",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "headers": {
              "Content-Disposition": {
                "type": "string"
              },
              "Content-Length": {
                "type": "int64"
              },
              "Content-Type": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/CollectionDownloadNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "download collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/retry": {
      "post": {
        "description": "Retry collection processing by ID",
        "operationId": "collection#retry",
        "parameters": [
          {
            "description": "Identifier of collection to retry",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/CollectionRetryNotRunningResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/CollectionRetryNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "retry collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/collection/{id}/workflow": {
      "get": {
        "description": "Retrieve workflow status by ID",
        "operationId": "collection#workflow",
        "parameters": [
          {
            "description": "Identifier of collection to look up",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/CollectionWorkflowResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/CollectionWorkflowNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "workflow collection",
        "tags": [
          "collection"
        ]
      }
    },
    "/pipeline": {
      "get": {
        "description": "List all known pipelines",
        "operationId": "pipeline#list",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "in": "query",
            "name": "status",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "items": {
                "$ref": "#/definitions/EnduroStoredPipelineResponse"
              },
              "type": "array"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "list pipeline",
        "tags": [
          "pipeline"
        ]
      }
    },
    "/pipeline/{id}": {
      "get": {
        "description": "Show pipeline by ID",
        "operationId": "pipeline#show",
        "parameters": [
          {
            "description": "Identifier of pipeline to show",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PipelineShowResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PipelineShowNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "show pipeline",
        "tags": [
          "pipeline"
        ]
      }
    },
    "/pipeline/{id}/processing": {
      "get": {
        "description": "List all processing configurations of a pipeline given its ID",
        "operationId": "pipeline#processing",
        "parameters": [
          {
            "description": "Identifier of pipeline",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "items": {
                "example": "abc123",
                "type": "string"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PipelineProcessingNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "processing pipeline",
        "tags": [
          "pipeline"
        ]
      }
    },
    "/swagger/swagger.json": {
      "get": {
        "description": "JSON document containing the API swagger definition.",
        "operationId": "swagger#/swagger/swagger.json",
        "responses": {
          "200": {
            "description": "File downloaded",
            "schema": {
              "type": "file"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "Download internal/api/gen/http/openapi.json",
        "tags": [
          "swagger"
        ]
      }
    }
  },
  "produces": [
    "application/json",
    "application/xml",
    "application/gob"
  ],
  "swagger": "2.0"
}
