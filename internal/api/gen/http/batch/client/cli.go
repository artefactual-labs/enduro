// Code generated by goa v3.12.4, DO NOT EDIT.
//
// batch HTTP client CLI support package
//
// Command:
// $ goa gen github.com/artefactual-labs/enduro/internal/api/design -o
// internal/api

package client

import (
	"encoding/json"
	"fmt"

	batch "github.com/artefactual-labs/enduro/internal/api/gen/batch"
)

// BuildSubmitPayload builds the payload for the batch submit endpoint from CLI
// flags.
func BuildSubmitPayload(batchSubmitBody string) (*batch.SubmitPayload, error) {
	var err error
	var body SubmitRequestBody
	{
		err = json.Unmarshal([]byte(batchSubmitBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"completed_dir\": \"abc123\",\n      \"path\": \"abc123\",\n      \"pipeline\": \"abc123\",\n      \"processing_config\": \"abc123\",\n      \"reject_duplicates\": false,\n      \"retention_period\": \"abc123\",\n      \"transfer_type\": \"abc123\"\n   }'")
		}
	}
	v := &batch.SubmitPayload{
		Path:             body.Path,
		Pipeline:         body.Pipeline,
		ProcessingConfig: body.ProcessingConfig,
		CompletedDir:     body.CompletedDir,
		RetentionPeriod:  body.RetentionPeriod,
		RejectDuplicates: body.RejectDuplicates,
		TransferType:     body.TransferType,
	}
	{
		var zero bool
		if v.RejectDuplicates == zero {
			v.RejectDuplicates = false
		}
	}

	return v, nil
}
